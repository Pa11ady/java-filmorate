DROP TABLE IF EXISTS film_genre;

CREATE TABLE IF NOT EXISTS rating (
    rating_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(10)   NOT NULL,
    CONSTRAINT uc_rating_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(30)   NOT NULL,
    CONSTRAINT uc_genre_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS film (
    film_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50)   NOT NULL,
    description varchar(200)   NOT NULL,
    release_date date   NOT NULL,
    duration integer   NOT NULL,
    rating_id bigint   NOT NULL,
	CONSTRAINT fk_film_rating_id FOREIGN KEY(rating_id) REFERENCES rating (rating_id)
);

CREATE TABLE IF NOT EXISTS "user"(
    user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(50)   NOT NULL,
    login varchar(50)   NOT NULL,
    name varchar(50)   NOT NULL,
    birthday date   NOT NULL,
    CONSTRAINT uc_user_email UNIQUE (email),
    CONSTRAINT uc_user_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS film_like (
    film_id bigint   NOT NULL,
    user_id bigint   NOT NULL,
    CONSTRAINT pk_film_like PRIMARY KEY (film_id,user_id),
	CONSTRAINT fk_film_like_film_id FOREIGN KEY(film_id) REFERENCES film (film_id),
	CONSTRAINT fk_film_like_user_id FOREIGN KEY(user_id) REFERENCES "user" (user_id)
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id1  bigint    NOT NULL,
    user_id2  bigint    NOT NULL,
    confirmed boolean   NOT NULL,
    CONSTRAINT pk_friendship PRIMARY KEY (user_id1, user_id2),
	CONSTRAINT fk_friendship_user_id1 FOREIGN KEY(user_id1) REFERENCES "user" (user_id),
	CONSTRAINT fk_friendship_user_id2 FOREIGN KEY(user_id2) REFERENCES "user" (user_id)
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id bigint   NOT NULL,
    genre_id bigint   NOT NULL,
    CONSTRAINT pk_film_genre PRIMARY KEY (film_id,genre_id),
	CONSTRAINT fk_film_genre_film_id FOREIGN KEY(film_id) REFERENCES film (film_id),
	CONSTRAINT fk_film_genre_genre_id FOREIGN KEY(genre_id) REFERENCES genre (genre_id)
);

/*DELETE FROM rating;
DELETE FROM film;

INSERT INTO rating (name) VALUES('RRR');
INSERT INTO rating (name) VALUES('RR');

SET @myid = SELECT rating_id FROM rating WHERE name = 'RRR';
INSERT INTO film
(name, description, release_date, duration, rating_id)
VALUES('film', '',  CURRENT_DATE(), 0, @myid);
*/



